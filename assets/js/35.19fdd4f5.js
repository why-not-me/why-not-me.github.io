(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{505:function(t,s,n){"use strict";n.r(s);var a=n(10),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("DOM 事件，常见的有用户点击事件、双击事件、I/O 输入等，常常会引起页面状态改变。前端开发者可以针对这些事件，添加 handle 函数，当事件发生时，就可以做出响应的处理。所以 DOM 事件和事件监听器本质上是“订阅发布”模式。")]),t._v(" "),n("h2",{attrs:{id:"dom-事件级别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件级别"}},[t._v("#")]),t._v(" DOM 事件级别")]),t._v(" "),n("p",[t._v("DOM 事件级别一般认为有三种：")]),t._v(" "),n("ol",[n("li",[t._v("DOM 0 阶段：这个阶段，js 一般通过"),n("code",[t._v("element.onclick = function() {}")]),t._v("这样的形式添加事件监听器，很明显，这阶段无法给给某个元素的某种事件添加多个监听器。")]),t._v(" "),n("li",[t._v("DOM 2 阶段：这个阶段，js 一般通过"),n("code",[t._v("element.addEventListener(eventType, handler, options)")]),t._v("这样的形式添加事件监听器，这个阶段，允许对某个元素的某个事件添加多个监听器。")]),t._v(" "),n("li",[t._v("DOM 3 阶段：新增了很多 DOM 事件")])]),t._v(" "),n("h2",{attrs:{id:"dom-事件流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件流"}},[t._v("#")]),t._v(" DOM 事件流")]),t._v(" "),n("p",[t._v("DOM 事件主要有三个阶段，捕获阶段、目标阶段和冒泡阶段。比如某个 div 元素生发生了一个 click 事件，那么这个 click 事件发生的顺序是这样的：")]),t._v(" "),n("ol",[n("li",[t._v("捕获阶段：window 对象 =》document 对象=》htm 元素=》body 元素=》目标元素")]),t._v(" "),n("li",[t._v("目标阶段：事件附着于目标元素，产生。")]),t._v(" "),n("li",[t._v("冒泡阶段：目标元素 =》 body 元素 =》html 元素 =》 document 对象 =》 window 对象")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设要在捕获阶段监听，那么应该这样写")]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" capture"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  假设要在冒泡阶段监听，那么应该这样写")]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" capture"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"生成自定义事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成自定义事件"}},[t._v("#")]),t._v(" 生成自定义事件")]),t._v(" "),n("p",[t._v("js 允许使用"),n("code",[t._v("Event")]),t._v("对象生成自定义事件，比如")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myEvent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-event'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-event'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'监听自定义事件'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    capture"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  派发自定义事件")]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatchEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myEvent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  如果自定义事件还需要使用额外的数据")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  那么考虑使用 CustomEvent 对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" customEvent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom-test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom-event'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  level"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  然后注册监听函数，再派发事件对象")]),t._v("\n")])])]),n("p",[t._v("值得注意的是，"),n("code",[t._v("Event")]),t._v("对象的事件是不会冒泡的，所以只能在捕获阶段被监听；而"),n("code",[t._v("CustomEvent")]),t._v("可以通过设置参数"),n("code",[t._v("bubbles: true")]),t._v("，使得"),n("code",[t._v("CustomEvent")]),t._v("对象的事件可以冒泡。")]),t._v(" "),n("h2",{attrs:{id:"event-对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-对象"}},[t._v("#")]),t._v(" Event 对象")]),t._v(" "),n("p",[t._v("Event 对象是 dom 事件发生时，监听函数接受到的是事件对象，一般以下属性和方法很有用")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("event.target")]),t._v("产生事件的 dom 元素")]),t._v(" "),n("li",[n("code",[t._v("event.currentTarget")]),t._v("注册了监听器的 dom 元素")]),t._v(" "),n("li",[n("code",[t._v("event.preventDefault()")]),t._v("阻止事件的默认行为")]),t._v(" "),n("li",[n("code",[t._v("event.stopPropagation()")]),t._v("阻止事件的冒泡")]),t._v(" "),n("li",[n("code",[t._v("event.stopImmediatePropagation()")]),t._v("如果注册了多个监听器，那么在某个监听器调用了该方法后，后续的监听器不会再响应")])]),t._v(" "),n("h2",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("p",[t._v("了解 DOM 事件流，以及自定义事件的用法。")])])}),[],!1,null,null,null);s.default=e.exports}}]);