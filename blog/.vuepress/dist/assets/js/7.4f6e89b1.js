(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{454:function(_,t,o){_.exports=o.p+"assets/img/js-proto-1.6e09ac0d.png"},455:function(_,t,o){_.exports=o.p+"assets/img/js-proto-2.474fabdc.png"},456:function(_,t,o){_.exports=o.p+"assets/img/js-proto-3.5ca1bf1d.png"},495:function(_,t,o){"use strict";o.r(t);var s=o(10),v=Object(s.a)({},(function(){var _=this,t=_.$createElement,s=_._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("p",[_._v("在 js 中，我们最常打交道的就是对象，比如")]),_._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("var")]),_._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  name"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v(":")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[_._v("'小王'")]),_._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])])]),s("p",[_._v("我们可以对"),s("code",[_._v("person")]),_._v("进行一些操作，包括：")]),_._v(" "),s("ol",[s("li",[_._v("【读】属性")]),_._v(" "),s("li",[_._v("【新增】属性")]),_._v(" "),s("li",[_._v("【更新】属性")]),_._v(" "),s("li",[_._v("【删除】属性")])]),_._v(" "),s("p",[_._v("而使用最频繁的就是读和新增了，类如"),s("code",[_._v("person.name")]),_._v("就是读，"),s("code",[_._v("person[age]=23")]),_._v("就是新。")]),_._v(" "),s("p",[_._v("在我们对"),s("code",[_._v("person")]),_._v("进行额外操作前，我们在浏览器控制台看看它是什么样的")]),_._v(" "),s("p",[s("img",{attrs:{src:o(454),alt:"person 结构"}})]),_._v(" "),s("p",[_._v("很惊奇地看到，"),s("code",[_._v("person")]),_._v("除了有我们主动写的属性，还有其他的属性和方法，比如图中的"),s("code",[_._v("constructor")]),_._v("，"),s("code",[_._v("valueOf")]),_._v("和"),s("code",[_._v("toString")]),_._v("。")]),_._v(" "),s("p",[_._v("那么问题就来了，"),s("strong",[_._v("我们并没有给"),s("code",[_._v("person")]),_._v("写这些属性和方法，它们是怎么来的呢？")])]),_._v(" "),s("h2",{attrs:{id:"找找原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#找找原型链"}},[_._v("#")]),_._v(" 找找原型链")]),_._v(" "),s("p",[_._v("根据控制台"),s("code",[_._v("console.dir()")]),_._v("的显示结果，我们来整理一波")]),_._v(" "),s("p",[_._v("先手画一个示意图理解下")]),_._v(" "),s("p",[s("img",{attrs:{src:o(455),alt:"js-prototype-2"}})]),_._v(" "),s("p",[_._v("我们可以整理出")]),_._v(" "),s("ol",[s("li",[s("code",[_._v("person")]),_._v(" 本身有一个属性 "),s("code",[_._v("name")]),_._v("（这是我们给它加的）")]),_._v(" "),s("li",[s("code",[_._v("person")]),_._v(" 还有一个属性叫做 "),s("code",[_._v("__proto__")]),_._v("（它是一个对象")]),_._v(" "),s("li",[s("code",[_._v("person.__proto__")]),_._v(" 有很多属性，包括 "),s("code",[_._v("valueOf")]),_._v("、"),s("code",[_._v("toString")]),_._v("、"),s("code",[_._v("constructor")]),_._v(" 等")]),_._v(" "),s("li",[s("code",[_._v("person.__proto__")]),_._v(" 其实也有一个叫做 "),s("code",[_._v("__proto__")]),_._v(" 的属性，值为 null")])]),_._v(" "),s("p",[_._v("那回到我们的问题：为什么"),s("code",[_._v("person")]),_._v("会有"),s("code",[_._v("constructor")]),_._v("、"),s("code",[_._v("valueOf")]),_._v("、"),s("code",[_._v("toString")]),_._v("这几个属性呢？")]),_._v(" "),s("p",[_._v("答案就是，跟"),s("code",[_._v("__proto__")]),_._v("相关。")]),_._v(" "),s("p",[_._v("当我们在 js 里，使用"),s("code",[_._v("person.toString()")]),_._v("的时候，js 引擎就会做下面的事情：")]),_._v(" "),s("ol",[s("li",[_._v("看看 "),s("code",[_._v("person")]),_._v(" 对象本身有没有 "),s("code",[_._v("toString")]),_._v(" 属性。没有就走到下一步。")]),_._v(" "),s("li",[_._v("看看 "),s("code",[_._v("person.__proto__")]),_._v(" 对象有没有 toString 属性，发现 "),s("code",[_._v("person.__proto__")]),_._v(" 有 toString 属性，于是找到了")])]),_._v(" "),s("p",[_._v("所以"),s("code",[_._v("person.toString")]),_._v("实际上就是第 2 步中找到"),s("code",[_._v("obj.__proto__.toString")]),_._v("。")]),_._v(" "),s("p",[_._v("那么我们可以继续推理：")]),_._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[_._v("如果"),s("code",[_._v("person.__proto__")]),_._v("没有，那么浏览器会继续查看 "),s("code",[_._v("person.__proto__.__proto__")])]),_._v(" "),s("li",[_._v("如果"),s("code",[_._v("obj.__proto__.__proto__")]),_._v("也没有，那么浏览器会继续查看"),s("code",[_._v("obj.__proto__.__proto__.proto__")])]),_._v(" "),s("li",[_._v("直到找到 "),s("code",[_._v("toString")]),_._v(" 或者 "),s("code",[_._v("__proto__")]),_._v(" 为 null。")])]),_._v(" "),s("p",[_._v("以上这个一层一层查找的过程，就像是在"),s("code",[_._v("__proto__")]),_._v("组成的一条链子查找，这个链子，就被称之为"),s("strong",[_._v("原型链")])]),_._v(" "),s("h2",{attrs:{id:"共享原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#共享原型链"}},[_._v("#")]),_._v(" 共享原型链")]),_._v(" "),s("p",[_._v("我们现在又写了另外一个对象")]),_._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("var")]),_._v(" person2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  name"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v(":")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[_._v("'小李'")]),_._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])])]),s("p",[_._v("那现在链子的情况是怎样的了？我们再来画画示意图")]),_._v(" "),s("p",[s("img",{attrs:{src:o(456),alt:"js-prototype-3"}})]),_._v(" "),s("p",[_._v("那么可以看到，"),s("code",[_._v("person.toString")]),_._v("和"),s("code",[_._v("person2.toString")]),_._v("指向的是同一个东西，也就是"),s("code",[_._v("person.__proto__.toString")]),_._v("。所以当我们改变"),s("code",[_._v("person.__proto__.toString")]),_._v("的值时，"),s("code",[_._v("person2.toString")]),_._v("也会发生改变。这就是原型链的便捷之处，让不同的对象，只要有同样的原型，便可使用一些同样的属性和方法。")]),_._v(" "),s("p",[_._v("假如我们想让"),s("code",[_._v("person2.toString")]),_._v("和"),s("code",[_._v("person.toString")]),_._v("不同，得怎么操作呢？直接赋值就好了")]),_._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[_._v("person2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[_._v("toString")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("return")]),_._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[_._v("'person2的toString'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])])]),s("p",[_._v("这样"),s("code",[_._v("peron2.toString")]),_._v("就不会去查找原型链的，而是直接使用自己的。")]),_._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[_._v("#")]),_._v(" 小结")]),_._v(" "),s("p",[_._v("js 中的原型链是通过对象的"),s("code",[_._v("__proto__")]),_._v("（浏览器实现的）属性一层一层链接起来的，对象读取属性或方法时，会沿着这个链子一层一层往上找。原型链给 js 对象有了复用属性和方法的便捷性。")])])}),[],!1,null,null,null);t.default=v.exports}}]);